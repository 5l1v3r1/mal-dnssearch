mal-dnssearch

Compare log files with DNS names (default) or IPs against an updated and compiled malhost list. 
Downloads malhost lists and compares each entry to log file entries. 

Ran with Bash on OpenBSD, FreeBSD, Mac OSX, and Ubuntu

SUPPORTED LOGS (parses DNS names only): 

-a ARGUS - file, requires user data i.e. setting ARGUS_CAPTURE_DATA_LEN
-b BRO-IDS - dns.log file
-c CUSTOM - custom file with one DNS name per line w/o trailing FQDN dot
-d TCPDUMP - PCAP file
-e HOSTS - /etc/hosts file
-i ISC BIND - query log file
-p PassiveDNS - log file
-o SonicWall NSA - remote syslog log file
-s TSHARK - PCAP file
-t HTTPRY - log file

Your log not supported? E-mail me a sample, I'll add it.

CUSTOM LOG (IP parsing):

-z Custom file - with IP addresses, one per line. 
Use in conjuction with the IP malware host lists below.

SUPPORTED MALWARE HOST LISTS:

Default is http://secure.mayhemiclabs.com/malhosts/malhosts.txt (DNS)

-0 Custom file, one entry per line
-1 http://labs.snort.org/feeds/ip-filter.blf (IP)
-2 http://rules.emergingthreats.net/open/suricata/rules/compromised-ips.txt (IP)
-3 http://reputation.alienvault.com/reputation.generic (IP)
-4 http://rules.emergingthreats.net/open/suricata/rules/botcc.rules (IP)
-5 http://rules.emergingthreats.net/open/suricata/rules/tor.rules (IP)
-6 http://rules.emergingthreats.net/blockrules/emerging-rbn.rules (IP)
-7 http://www.malwaredomainlist.com/hostslist/hosts.txt (DNS)
-8 http://www.malwaredomainlist.com/hostslist/ip.txt (IP)
-9 http://www.ciarmy.com/list/ci-badguys.txt (IP)
-M https://raw.github.com/jonschipp/mal-dnssearch/master/mandiant_apt1.dns (DNS)

TODO (not ranked) [~~DONE~~]: 
1. ~~Add iptables, PF, and IPFW support to block matches~~ 
2. ~~Allow multiple log files and types to be specified at once~~
3. ~~Add/fix counters~~
4. More efficient parsing
5. ~~Added two verbosity options~~
6. Add support for more logs (e-mail me with request and log sample)
7. ~~Read in alternative lists e.g. Emerging Threats, CIArmy~~
8. Check for necessary programs where needed e.g. bro-cut
9. ~~Ability to read in file with IPs instead of names~~
10. ~~Add skip download option~~
11. Option to edit/change URLs in the script
12. Rewrite script in Python

USAGE:

Non-mandatory options:
-w accept file with one entry per line or grep regex e.g. -w "dont|match|these", -w whitelist.txt
-l Log stdout & stderr to file  e.g. -l /var/log/output.log
-f block matched hosts w/ firewall, 3 available: iptables, pf, ipfw e.g. -f pf
-N skip file download
-v verbose mode, echo echo line from malhost list, for debugging
-V extended verbose mode, echo each line from the log file in addition to the malhost list, for debugging
-z specify an IP list instead of a DNS. Use in conjuction with -# for choice of mal list
Usage: ./mal-dnssearch <logoption> <logfile> [-w whitelist] [-l out.log] [-f firewall] [-#] [-N] [-vV]

EXAMPLES:

./mal-dnssearch.sh -s traffic.pcap
./mal-dnssearch.sh -p /var/log/passivedns/dmz.log -w whitelist.txt
./mal-dnsearch.sh -b /usr/local/bro/logs/current/dns.log -w "company.com|abc.com|google|facebook" -l dns.results.log
./mal-dnsearch.sh -b /usr/local/bro/logs/current/dns.log -f iptables -l dns.results.log
./mal-dnsearch.sh -a bro.log -b dns.log -c custom.txt -f iptables -l dns.results.log
./mal-dnsearch.sh -z iplist.log -2 -l ip.results.log -N -v
./mal-dnsearch.sh -z iplist.log -0 malIP.txt -l ip.results.log
./mal-dnsearch.sh -s dns.pcap -7
./mal-dnssearch.sh -p test/malhosts.test -s test/dns.pcap -7 -N

MORE INFO: https://sickbits.net/finding-malware-by-dns-cache-snooping/
AUTHOR: Jon Schipp (keisterstash)
E-MAIL: jonschipp [ at ] Gmail dot com
