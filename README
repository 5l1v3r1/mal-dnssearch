mal-dnssearch

Mal-dnssearch is a robust shell script that compares IP and DNS
addresses in logs against malware (and related) reputation data.
It reports any matches and supports many log formats.

Tested with Bash on OpenBSD, FreeBSD, Mac OSX, and Ubuntu.

INSTALLATION:

Edit the Makefile or use the defaults to install the script.
The default is to install to /usr/local/mal-dnssearch. A symlink
is then created in /usr/bin so that mal-dnssearch will most likely
be in your PATH.

To install use:
``sudo make install''

To uninstall use:
``sudo make uninstall''

SUPPORTED LOGS (parses DNS names only):

Specify log type with ``-T <type>''. This is used to parse the file correctly.
``-f'' is then required to specify the log file to read.

Type:      |    Description:
argus      -    ARGUS file (requires user data i.e. setting ARGUS_CAPTURE_DATA_LEN)
bind       -    ISC's BIND query log file
bro        -    BRO-IDS dns.log file
custom-ip  -    Custom file - IP addresses, one per line.
custom-dns -    Custom file - DNS (with one DNS name per line w/o trailing FQDN dot)
hosts      -    /etc/hosts file
httpry     -    HttPry log file
passivedns -    PassiveDNS log file
tcpdump    -    Tcpdump pcap file
tshark     -    Tshark pcap file
sonicwall  -    SonicWall NSA log file (via syslog)

Your log not supported? E-mail me a sample, I'll add it.

SUPPORTED MALWARE HOST LISTS:

Default is http://secure.mayhemiclabs.com/malhosts/malhosts.txt (DNS) when
``-M'' is not specified.

List:      |     Description:
custom     -     Custom, one IP entry per line
snort      -     http://labs.snort.org/feeds/ip-filter.blf (IP)
et_ips     -     http://rules.emergingthreats.net/open/suricata/rules/compromised-ips.txt (IP)
alienvault -     http://reputation.alienvault.com/reputation.generic (BIG file) (IP)
botcc      -     http://rules.emergingthreats.net/open/suricata/rules/botcc.rules (IP)
tor        - 	 http://rules.emergingthreats.net/open/suricata/rules/tor.rules (IP)
rbn        - 	 http://rules.emergingthreats.net/blockrules/emerging-rbn.rules (IP)
malhosts   -     http://www.malwaredomainlist.com/hostslist/hosts.txt (DNS)
malips     -     http://www.malwaredomainlist.com/hostslist/ip.txt (IP)
ciarmy     -     http://www.ciarmy.com/list/ci-badguys.txt (IP)
mayhemic   -     http://secure.mayhemiclabs.com/malhosts/malhosts.txt (DNS)
mandiant   - 	 https://raw.github.com/jonschipp/mal-dnssearch/master/mandiant_apt1.dns (DNS)

TODO (not ranked) [~~DONE~~]:
1. ~~Add iptables, PF, and IPFW support to block matches~~
2. ~~Allow multiple log files and types to be specified at once~~
3. ~~Add/fix counters~~
4. More efficient parsing
5. ~~Added two verbosity options~~
6. Add support for more logs (e-mail me with request and log sample)
7. ~~Read in alternative lists e.g. Emerging Threats, CIArmy~~
8. Check for necessary programs where needed e.g. bro-cut, ra, tcpdump, tshark
9. ~~Ability to read in file with IPs instead of names~~
10. ~~Add skip download option~~
11. Option to edit/change URLs in the script
12. Add cron mode option
13. Rewrite script in Python
14. Add option to download list only
15. See if you can read from the Collective Intelligence Framework database
16. Try optimizing with Gnu Parallel
17. See if there's a Team Cymru list to match against.
18. Add option to combine all IP and DNS lists into a single IP or DNS list. e.g. --all [dns|ip]
19. Add lists:
	* http://www.dragonresearchgroup.org/insight/
	* http://danger.rulez.sk/projects/bruteforceblocker/blist.php
	* http://www.openbl.org/lists/date_all.txt
	* http://www.mirc.com/servers.ini
	* https://reputation.alienvault.com/reputation.data
20. Read from exported Sguil event logs
21. ~~Rewrite log options to use -L <log type>~~
22. ~~Rewrite malware host lists options to -M <list>~~

USAGE:

Non-mandatory options:
-w accept file with one entry per line or grep regex e.g. -w "dont|match|these", -w whitelist.txt
-l Log stdout & stderr to file  e.g. -l /var/log/output.log
-F block matched hosts w/ firewall, 3 available: iptables, pf, ipfw e.g. -F pf
-N skip file download
-v verbose mode, echo echo line from malhost list, for debugging
-V extended verbose mode, echo each line from the log file in addition to the malhost list, for debugging
-z specify an IP list instead of a DNS. Use in conjuction with -# for choice of mal list
Usage: ./mal-dnssearch -T <type> -f <logfile> [-M <list>] [-w whitelist] [-l out.log] [-F firewall] [-N] [-vV]

EXAMPLES:

./mal-dnsearch.sh -T tshark -f dns.pcap
./mal-dnssearch.sh -T passivedns -f /var/log/passivedns/dmz.log -w whitelist.txt
./mal-dnsearch.sh -T bro -f /usr/local/bro/logs/current/dns.log \
	-w "company.com|abc.com|google|facebook" -l dns.results.log
./mal-dnsearch.sh -T bro -f /usr/local/bro/logs/current/dns.log -F iptables -l dns.results.log
./mal-dnsearch.sh -T argus -f dns.argus -M malhosts -F iptables -l dns.results.log
./mal-dnsearch.sh -T custom-ip -f iplist.log -M snort -l ip.results.log -N -v
./mal-dnsearch.sh -T custom-ip -f iplist.log -M mandiant -l ip.results.log

MORE INFO: https://sickbits.net/finding-malware-by-dns-cache-snooping/
AUTHOR: Jon Schipp (keisterstash)
E-MAIL: jonschipp [ at ] Gmail dot com
